@page "/events"
@using CharitySystem.Client.Services
@using CharitySystem.Models
@inject EventService EventService
@inject NavigationManager Navigation

<h3>Список подій</h3>

@if (events == null)
{
	<p><em>Завантаження...</em></p>
}
else if (events.Count == 0)
{
	<p><em>Немає подій.</em></p>
}
else
{
	<table class="table">
		<thead>
			<tr>
				<th>EventID</th>
				<th>Назва</th>
				<th>Дата</th>
				<th>Місце</th>
				<th>Категорія</th>
				<th>Місць</th>
				<th>Мета збору</th>
				<th></th>
			</tr>
		</thead>
		<tbody>
			@foreach (var ev in events)
			{
				<tr>
					<td>@ev.EventID</td>
					<td>@ev.Title</td>
					<td>@ev.Date.ToString("dd.MM.yyyy HH:mm")</td>
					<td>@ev.Location</td>
					<td>@ev.Category</td>
					<td>@ev.Capacity</td>
					<td>@ev.FundraisingGoal.ToString("C")</td>
					<td>
						<a class="btn btn-sm btn-outline-warning mx-1" href="/events/edit/@ev.Id">Edit</a>
						<a class="btn btn-sm btn-outline-danger" href="/events/delete/@ev.Id">Delete</a>
					</td>
				</tr>
			}
		</tbody>
	</table>

	<button class="btn btn-primary" @onclick="@(() => Navigation.NavigateTo("/events/create"))">Створити нову подію</button>
}

@code {
	private List<Event>? events;

	protected override async Task OnInitializedAsync()
	{
		events = await EventService.GetEvents();
	}
}
